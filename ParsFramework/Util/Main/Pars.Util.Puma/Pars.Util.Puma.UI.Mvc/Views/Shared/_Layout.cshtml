@using System.Configuration
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Puma</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.6 -->
    <link async rel="stylesheet" href="~/bootstraptemplate/bootstrap/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link async rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.5.0/css/font-awesome.min.css">
    <!-- Theme style -->
    <link async rel="stylesheet" href="~/bootstraptemplate/dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link async rel="stylesheet" href="~/bootstraptemplate/dist/css/skins/_all-skins.min.css">
    <link async rel="stylesheet" href="~/bootstraptemplate/plugins/iCheck/flat/blue.css">
    <link async rel="stylesheet" href="~/bootstraptemplate/plugins/typicons/typicons.css">
    <base async href="@ConfigurationManager.AppSettings["appUrl"]" />
    <script src="~/node_modules/core-js/client/shim.min.js"></script>
    <script src="~/node_modules/zone.js/dist/zone.js"></script>
    <script src="~/node_modules/reflect-metadata/Reflect.js"></script>
    <script src="~/node_modules/systemjs/dist/system.src.js"></script>
    <!-- 2. Configure SystemJS -->
    <script src="~/systemjs.config.js"></script>
    <script>
        window.module = 'aot';

        var xmlhttp = new XMLHttpRequest();
        document.appUrl = "@ConfigurationManager.AppSettings["appServer"]@ConfigurationManager.AppSettings["appUrl"]";
        var url = document.appUrl + 'api/Federation/UserContext';
        var environment = "@ConfigurationManager.AppSettings["environment"]";
        xmlhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var userContext = JSON.parse(this.responseText);
                document.locale = userContext.culture;
                document.userContext = userContext;
                System.config({
                    map: {
                        text: 'systemjs-text-plugin.js'
                    }
                });

                if (environment == "dev") {
                    System.import('app').catch(function (err) { console.error(err); })
                }
                else {
                    System.import('bundles/build-' + document.locale + '.js')
                }
            }
        };
        xmlhttp.open("GET", url, true);
        xmlhttp.send();
    </script>
</head>
<body class="hold-transition skin-blue sidebar-mini">
    @RenderBody()
    <script src="~/bootstraptemplate/plugins/jQuery/jquery-2.2.3.min.js"></script>
    <script src="~/bootstraptemplate/plugins/select2/select2.min.js"></script>
    <link href="~/bootstraptemplate/plugins/select2/select2.min.css" rel="stylesheet" />
    <script async src="~/bootstraptemplate/bootstrap/js/bootstrap.min.js"></script>
    <script async src="~/bootstraptemplate/dist/js/app.min.js"></script>
</body>
</html>
