<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="pars.core" type="Pars.Core.Configuration.ParsConfigurationSection, Pars.Core" />
  </configSections>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="CacheBaseKey" value="Pars.Util.Puma:"/>
  </appSettings>

  <loggingConfiguration name="" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Event Log Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
           listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        source="Pars.Util.Puma" formatter="Text Formatter" log=""
        machineName="." traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        template="Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}"
        name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="Event Log Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Event Log Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>

  <exceptionHandling>
    <exceptionPolicies>
      <add name="Pars.Util.Puma">
        <exceptionTypes>
          <add name="All Exceptions"
               type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
               postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   faultContractType="Pars.Core.Contract.StandardFaultContract, Pars.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=9f2de0b65b2a84c0"
                   name="ExceptionHandler A">
                <mappings>
                  <add source="{Guid}" name="FaultId" />
                  <add source="ErrorType" name="ErrorType" />
                </mappings>
              </add>
            </exceptionHandlers>
          </add>
          <add name="Business Exceptions"
               type="Pars.Core.BusinessException, Pars.Core"
               postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF.FaultContractExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.WCF, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                   faultContractType="Pars.Core.Contract.StandardFaultContract, Pars.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=9f2de0b65b2a84c0"
                   name="ExceptionHandler B">
                <mappings>
                  <add source="{Guid}" name="FaultId" />
                  <add source="ErrorType" name="ErrorType" />
                </mappings>
              </add>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>


  <pars.core platform="Service" environment="Test">
    <logging fileName="Tema.Global.LOG.txt" enabled="false" />
    <data connectionString="metadata=res://*/EntityPolicyModel.csdl|res://*/EntityPolicyModel.ssdl|res://*/EntityPolicyModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=parsdevdb;initial catalog=TemaGlobalCoreV1;integrated security=True;MultipleActiveResultSets=True;App=EntityFrameworkDataSecurityTest&quot;" dataSecurityEnabled="false" columnSecurityEnabled="false" localizationEnabled="true" softDeleteEnabled="true" dataAuditEnabled="true"/>
    <ui>
      <desktop useStartupFolder="true" />
      <view startupView="" />
    </ui>
    <security authentication="Federation" identityProvider="Federation">
    </security>
    <caching cacheProvider="Redis">
      <caching.redis servers="rediscache1:6379,rediscache2:6379,rediscache3:6379,allowAdmin=true" databasenumber="1"/>
    </caching>
    <ioc checkConfig="OnInit"></ioc>
  </pars.core>

  <connectionStrings>
    <add name="PumaContext" connectionString="data source=parsdevdb;initial catalog=TemaGlobalCoreV1;integrated security=True;MultipleActiveResultSets=True;App=Puma" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <unity>
    <containers>
      <container>
        <!--<type type  = "Pars.Core.ITimeProvider, Pars.Core"
              mapTo = "Pars.Core.SystemTimeProvider, Pars.Core"/>

        <type type  = "Pars.Core.Security.IIdentityProvider, Pars.Core"
               mapTo = "Pars.Core.Security.FederationIdentityProvider, Pars.Core"/>

        <type type ="Pars.Core.Data.IAuditableDataProvider, Pars.Core.Data"
              mapTo ="Pars.Core.Data.DefaultAuditableDataProvider, Pars.Core.Data" />-->

        <type type="Pars.Core.Caching.ICacheProvider, Pars.Core" mapTo="Pars.Core.Caching.Redis.RedisCacheProvider, Pars.Core.Caching.Redis" >
          <constructor />
        </type>

        <!--<type type  = "Pars.Util.Puma.Data.IPumaUnitOfWork, Pars.Util.Puma.Data"
              mapTo = "Pars.Util.Puma.Data.PumaUnitOfWork, Pars.Util.Puma.Data"/>

        <type type  = "Pars.Util.Puma.Data.IPumaContext, Pars.Util.Puma.Data"
             mapTo = "Pars.Util.Puma.Data.PumaContext, Pars.Util.Puma.Data"/>

        <type type  = "Pars.Util.Puma.Data.IClaimRepository, Pars.Util.Puma.Data"
              mapTo = "Pars.Util.Puma.Data.ClaimRepository, Pars.Util.Puma.Data"/>-->

      </container>
    </containers>
  </unity>

  <system.web>
    <compilation debug="true" targetFramework="4.6.1" />
    <httpRuntime targetFramework="4.6.1"/>
    <machineKey decryptionKey="544CF33D939E54B4B25208C585B2886349EAEF7D1CDFE265" validationKey="4A008F05254FEDFB56821B60FA417A164AF19AC6FF202D191B68544061F1B4E7B80F24CFFFF6A4D1AC5AE22E7D4B8A068C5685E78D1925B6D5CCE42AF4BB0BDD" decryption="Auto" validation="SHA1"/>
  </system.web>

  <system.serviceModel>

    <bindings>
      <ws2007FederationHttpBinding>
        <binding name="Ws2007FederationHttpBindingServer"
                 closeTimeout="00:03:30" openTimeout="00:03:30" receiveTimeout="00:03:30" sendTimeout="00:03:30"
                 maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647">
          <security mode="TransportWithMessageCredential">
            <message establishSecurityContext="false" issuedKeyType="BearerKey">
              <issuer address="https://stsdev.lcwaikiki.com/sts/issue/wstrust/mixed/certificate" binding="ws2007HttpBinding" bindingConfiguration="Ws2007HttpBindingStsCertificate"/>
              <issuerMetadata address="https://stsdev.lcwaikiki.com/sts/issue/wstrust/mex"/>
            </message>
          </security>
          <readerQuotas maxDepth="32" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647"/>
        </binding>
      </ws2007FederationHttpBinding>

      <ws2007HttpBinding>
        <binding name="Ws2007HttpBindingStsCertificate" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647">
          <security mode="TransportWithMessageCredential">
            <transport clientCredentialType="None" />
            <message clientCredentialType="Certificate" establishSecurityContext="false" />
          </security>
        </binding>
      </ws2007HttpBinding>
    </bindings>

    <protocolMapping>
      <remove scheme="http"/>
      <add scheme="http" binding="ws2007FederationHttpBinding" bindingConfiguration="Ws2007FederationHttpBindingServer"/>
    </protocolMapping>

    <extensions>
      <behaviorExtensions>
        <add name="standardErrorLogging" type="Pars.Core.Service.StandardErrorLoggingBehavior, Pars.Core.Service" />
      </behaviorExtensions>
    </extensions>

    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceAuthorization principalPermissionMode="Always"/>
          <serviceCredentials useIdentityConfiguration="true">
            <serviceCertificate findValue="50176767D7AED8E56B53BC469060BCC9FB62104D" storeLocation="LocalMachine" storeName="My" x509FindType="FindByThumbprint"/>
            <clientCertificate>
              <authentication certificateValidationMode="None" revocationMode="NoCheck" />
            </clientCertificate>
          </serviceCredentials>
          <standardErrorLogging />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>

  <system.identityModel>
    <identityConfiguration saveBootstrapContext="true">
      <audienceUris mode="Never"/>
      <certificateValidation certificateValidationMode="None" revocationMode="NoCheck"/>
      <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <trustedIssuers>
          <add thumbprint="50176767D7AED8E56B53BC469060BCC9FB62104D" name="https://stsdev.lcwaikiki.com" />
          <add thumbprint="A862011CA91D5C5D2BAB0DBA4C6708D9155FE613" name="https://ststest.lcwaikiki.com" />
          <add thumbprint="0CFDF8FCBCAB9B060E1CA280E6482E890AE54952" name="https://stslive.lcwaikiki.com" />
        </trustedIssuers>
      </issuerNameRegistry>
    </identityConfiguration>
  </system.identityModel>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>
